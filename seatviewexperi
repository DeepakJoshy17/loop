<?php
error_reporting(E_ALL);
ini_set('display_errors', 1);

include 'db_connection.php';

session_start(); // Start the session

$boat_id = isset($_GET['boat_id']) ? $_GET['boat_id'] : null;
$schedule_id = isset($_GET['schedule_id']) ? $_GET['schedule_id'] : null;
$start_stop_id = isset($_GET['start_stop_id']) ? $_GET['start_stop_id'] : null;
$end_stop_id = isset($_GET['end_stop_id']) ? $_GET['end_stop_id'] : null;

// Fetch the boat name based on boat_id
$boat_name_query = "SELECT boat_name FROM Boats WHERE boat_id = ?";
$stmt = $conn->prepare($boat_name_query);
$stmt->bind_param("i", $boat_id);
$stmt->execute();
$boat_name_result = $stmt->get_result();
$boat_name_row = $boat_name_result->fetch_assoc();
$boat_name = $boat_name_row['boat_name'] ?? 'Unknown Boat'; // Default if not found
$stmt->close();

if ($boat_id && $schedule_id && $start_stop_id && $end_stop_id) {
    // Fetch the start stop order
    $start_stop_order_query = "SELECT stop_order FROM Route_Stops WHERE stop_id = ?";
    $stmt = $conn->prepare($start_stop_order_query);
    $stmt->bind_param("i", $start_stop_id);
    $stmt->execute();
    $start_stop_order_result = $stmt->get_result();
    $start_stop_order_row = $start_stop_order_result->fetch_assoc();
    $start_stop_order = $start_stop_order_row['stop_order'] ?? null;
    $stmt->close();

    // Fetch all seats for the selected boat
    $seats_query = "SELECT seat_id, seat_number, type FROM Seats WHERE boat_id = ?";
    $stmt = $conn->prepare($seats_query);
    $stmt->bind_param("i", $boat_id);
    $stmt->execute();
    $seats_result = $stmt->get_result();
    $stmt->close();

    // Fetch booked seats and their associated end stop orders
    $booked_seats_query = "
      SELECT sb.seat_id, rs.stop_order AS end_stop_order
FROM Seat_Bookings sb
JOIN Route_Stops rs ON sb.end_stop_id = rs.stop_id
WHERE sb.schedule_id = ? AND sb.payment_status != 'Cancelled'";

    $stmt = $conn->prepare($booked_seats_query);
    $stmt->bind_param("i", $schedule_id);
    $stmt->execute();
    $booked_seats_result = $stmt->get_result();

    $booked_seats = [];
    while ($row = $booked_seats_result->fetch_assoc()) {
        $booked_seats[$row['seat_id']] = $row['end_stop_order'];
    }
    $stmt->close();
} else {
    echo "<div class='alert alert-danger'>No boat, schedule, or start/end stop selected.</div>";
    exit();
}
?>

<!DOCTYPE html>
<html lang="en">

<head>
<meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <title>Search and Book Your Seat</title>
    <link rel="stylesheet" href="css/bootstrap.min.css">
    <link rel="stylesheet" href="css/custom.css">
    <style>
        /* Styling for the boat container and seats */
        .boat-name {
            
            color: light grey;
            padding: 5px;
            margin-top: 20px;
            border-radius: 5px;
            font-size: 1.5em;
            font-weight: bold;
            position: absolute;
            top: 30px;
            left: 50%;
            transform: translateX(-50%);
            z-index: 10;
        }

        .seat-layout {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            margin-top: 50px;
        }

        .seat {
            display: inline-block;
            width: 40px;
            height: 40px;
            margin: 5px;
            cursor: pointer;
            position: relative;
            border: 2px solid #ccc;
            border-radius: 5px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            text-align: center;
            line-height: 40px;
            transition: transform 0.3s ease, background-color 0.3s ease;
        }

        .seat:hover {
            transform: scale(1.5);
            background-color: #202428;
            color: white;
            font-weight: bold;
        }

        .seat.selected {
            background-color: #38c4df;
            color: white;
            font-weight: bold;
        }

        .available {
            background-color: white;
            color: #202428;
            font-weight: bold;
        }

        .booked {
            background-color: lightgrey;
            color: white;
            font-weight: bold;
            cursor: not-allowed;
        }

        /* Wrapper for the boat and legend */
        .boat-legend-wrapper {
            display: flex;
            justify-content: center;
            align-items: flex-start;
            gap: 20px;
            margin-top: 20px;
        }

        .boat-container {
            position: relative;
            width: 100%;
            max-width: 600px;
            background: #f5f5f5;
            padding: 30px;
            padding-top: 120px;
            padding-bottom: 50px;
            text-align: center;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
            overflow: hidden;
            border-radius: 50% 50% 0 0;
        }

        .legend {
            display: flex;
            flex-direction: column;
            align-items: flex-start;
            margin-top: 300px;
            margin-left: 10px;
        }

        .legend-item {
            display: flex;
            align-items: center;
            margin-bottom: 10px;
        }

        .legend-box {
            width: 20px;
            height: 20px;
            margin-right: 5px;
        }

        .selected-box {
            background-color: #38c4df;
        }

        .available-box {
            background-color: white;
            border: 1px solid #ccc;
        }

        .booked-box {
            background-color: lightgrey;
        }

        /* Align buttons to bottom center */
        .action-buttons {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-top: 20px;
            margin-left:-100px;
        }
        .gap {
            width: 20px;
        }


        @media (max-width: 600px) {
    .boat-container {
        width: 150%;
        max-width: 600px;
        padding: 20px;
        background: #f5f5f5;
           
            padding-top: 120px;
            padding-bottom: 50px;
            text-align: center;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
            overflow: hidden;
            border-radius: 50% 50% 0 0;
        
    }

    .boat-name {
      
        color: light grey;
            padding: 5px;
            margin-top: 30px;
            border-radius: 5px;
            font-size: 1em;
            font-weight: bold;
            position: absolute;
            top: 30px;
            left: 50%;
            transform: translateX(-50%);
            z-index: 10;
    }

    .seat {
        width: 20px;
        height: 20px;
        line-height: 20px;
        font-size: 0.8em;
    }

    .seat-layout {
        margin-top: 30px;
    }

    .legend {
        margin-top: 300px;
    }

    .legend-item {
        font-size: 0.8em;
    }

    .action-buttons {
        margin-left:100px;
        align:center;
        flex-direction: column; /* Stack buttons vertically */
        gap: 10px; /* Adjust spacing */
    }
    
    .gap {
        width: 5px; /* Adjust gap width */
    }
}

    </style>
</head>

<body>
    <?php include 'includes/header.php'; ?>
    <br><br><br>
    <div class="container mt-5">        <h2 class="mb-4">Seat View <?/*= htmlspecialchars($boat_id ?? '') */?></h2>
          <!-- Wrapper for boat and legend -->
        <div class="boat-legend-wrapper">
            <!-- Boat container -->
            <div class="boat-container">
                <h1 class="boat-name"><?= htmlspecialchars($boat_name) ?></h1>
                <div id="seat-container" class="seat-layout"></div>
            </div>

            <!-- Legend -->
            <div class="legend">
                <div class="legend-item">
                    <div class="legend-box selected-box"></div>
                    <span>Selected</span>
                </div>
                <div class="legend-item">
                    <div class="legend-box available-box"></div>
                    <span>Available</span>
                </div>
                <div class="legend-item">
                    <div class="legend-box booked-box"></div>
                    <span>Booked</span>
                </div>
            </div>
    </div>
        <!-- Buttons aligned to bottom center -->
      
           <!-- <button id="select-all" class="btn btn-primary custom">Select All</button>
            <button id="deselect-all" class="btn btn-primary custom">Deselect All</button>--><br>
            <!-- Update the action buttons section -->
<div class="action-buttons">
    <form id="booking-form" method="post" action="payment.php">
        <input type="hidden" name="boat_id" value="<?= htmlspecialchars($boat_id ?? '') ?>">
        <input type="hidden" name="schedule_id" value="<?= htmlspecialchars($schedule_id ?? '') ?>">
        <input type="hidden" name="start_stop_id" value="<?= htmlspecialchars($start_stop_id ?? '') ?>">
        <input type="hidden" name="end_stop_id" value="<?= htmlspecialchars($end_stop_id ?? '') ?>">
        <input type="hidden" name="user_id" value="<?= htmlspecialchars($_SESSION['user_id'] ?? '') ?>">
        <input type="hidden" name="selected_seats" id="selected-seats" value="">
        
        <button type="submit" id="book-button" class="btn btn-primary custom">Book Now</button>


    </div>
    </form>
    </div>
    <br>
    <br>
    <?php include 'includes/footer1.php'; ?>


    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const seats = <?= json_encode($seats_result->fetch_all(MYSQLI_ASSOC)) ?>;
            const bookedSeats = <?= json_encode($booked_seats) ?>;
            const startStopOrder = <?= json_encode($start_stop_order) ?>;
            const seatContainer = document.getElementById('seat-container');
            const selectedSeats = document.getElementById('selected-seats');
            const bookingForm = document.getElementById('booking-form');
            const isLoggedIn = <?= isset($_SESSION['user_id']) ? 'true' : 'false' ?>;

            let seatCount = 0;

            seats.forEach(seat => {
                const seatElement = document.createElement('div');
                seatElement.classList.add('seat', 'available');

                if (bookedSeats[seat.seat_id] && startStopOrder < bookedSeats[seat.seat_id]) {
                    seatElement.classList.remove('available');
                    seatElement.classList.add('booked');
                    seatElement.style.cursor = 'not-allowed';
                }

                seatElement.dataset.seatId = seat.seat_id;
                seatElement.textContent = seat.seat_number;
                seatElement.addEventListener('click', function () {
                    if (this.classList.contains('available')) {
                        this.classList.toggle('selected');
                    }
                    updateSelectedSeats();
                });

                seatContainer.appendChild(seatElement);
                seatCount++;

                // Add a gap after every 3 seats
                if (seatCount % 3 === 0) {
                    const gap = document.createElement('div');
                    gap.classList.add('gap');
                    seatContainer.appendChild(gap);
                }
            });

            function updateSelectedSeats() {
                const selected = Array.from(document.querySelectorAll('.seat.selected'))
                    .map(seat => seat.dataset.seatId)
                    .join(',');
                selectedSeats.value = selected;
            }

            document.getElementById('select-all').addEventListener('click', function () {
                document.querySelectorAll('.seat.available').forEach(seat => seat.classList.add('selected'));
                updateSelectedSeats();
            });

            document.getElementById('deselect-all').addEventListener('click', function () {
                document.querySelectorAll('.seat.selected').forEach(seat => seat.classList.remove('selected'));
                updateSelectedSeats();
            });

            bookingForm.addEventListener('submit', function (e) {
                if (!isLoggedIn) {
                    e.preventDefault();
                    window.location.href = 'notloggedin.php';
                }
            });
        });
    </script>
</body>

</html>

    